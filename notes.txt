import pandas as pd
from statsmodels.tsa.arima.model import ARIMA
from pmdarima import auto_arima

# Load your dataset
# Assuming your dataset is stored in a DataFrame called df
# with columns 'Close Month', 'Close Year', 'BU/COE', and 'Total Incremental Revenue'

# Filter the dataset for specific BU/COE
selected_bu_coe = ['AUS', 'USIS', 'CAN']
df_selected = df[df['BU/COE'].isin(selected_bu_coe)]

# Combine 'Close Month' and 'Close Year' columns into a single date column
df_selected['date'] = pd.to_datetime(df_selected['Close Year'].astype(int).astype(str) + '-' + df_selected['Close Month'].astype(int).astype(str) + '-01')

# Create a DataFrame to store predictions
predictions_df = pd.DataFrame(columns=['Close Month', 'Close Year', 'BU/COE', 'Total Incremental Revenue Prediction'])

# Forecast revenue for each BU/COE
for bu_coe in selected_bu_coe:
    # Filter data for the current BU/COE
    bu_coe_data = df_selected[df_selected['BU/COE'] == bu_coe]
    
    # Fit AutoARIMA model
    autoarima_model = auto_arima(bu_coe_data['Total Incremental Revenue'], seasonal=False)
    
    # Train the ARIMA model
    model = ARIMA(bu_coe_data['Total Incremental Revenue'], order=autoarima_model.order)
    model_fit = model.fit()
    
    # Find the current year and remaining months
    current_year = pd.Timestamp.now().year
    current_month = pd.Timestamp.now().month
    
    # Forecast revenue for each upcoming month of the current year
    for month in range(current_month + 1, 13):
        # Forecast revenue for the current month
        forecast_date = pd.Timestamp(year=current_year, month=month, day=1)
        forecast_value = model_fit.forecast(steps=1)[0]
        
        # Create a DataFrame with the revenue prediction for the current month and BU/COE
        bu_coe_prediction = pd.DataFrame({
            'Close Month': [forecast_date.month],
            'Close Year': [forecast_date.year],
            'BU/COE': [bu_coe],
            'Total Incremental Revenue Prediction': [forecast_value]
        })
        
        # Append the prediction to the main predictions DataFrame
        predictions_df = pd.concat([predictions_df, bu_coe_prediction], ignore_index=True)
        
        # Update the model with the new data point
        bu_coe_data = bu_coe_data.append({'date': forecast_date, 'Total Incremental Revenue': forecast_value}, ignore_index=True)
        model_fit = ARIMA(bu_coe_data.set_index('date')['Total Incremental Revenue'], order=autoarima_model.order).fit()

# Output the predictions DataFrame
print(predictions_df)

import pandas as pd
from statsmodels.tsa.arima.model import ARIMA

# Load your dataset
df = pd.read_csv("your_data.csv")

# Convert 'Close Month' and 'Close Year' to datetime
df['Close Month'] = pd.to_datetime(df['Close Month'].astype(int).astype(str) + '-' + df['Close Year'].astype(int).astype(str), format='%m-%Y')

# Set 'Close Month' as the index
df.set_index('Close Month', inplace=True)

# Recognize current year and month
current_year = df.index[-1].year
current_month = df.index[-1].month

# Filter data for the specified countries and the current year
countries = ['AUS', 'USIS', 'CAN']
df_current_year = df[(df.index.year == current_year) & (df['BU/COE'].isin(countries))]

# Group by 'BU/COE' and resample to monthly frequency, summing 'Total Incremental Revenue'
df_grouped = df_current_year.groupby('BU/COE')['Total Incremental Revenue'].resample('M').sum().reset_index()

# Loop through each BU/COE
predictions = []
for group, df_group in df_grouped.groupby('BU/COE'):
    try:
        # Fit ARIMA model
        model = ARIMA(df_group['Total Incremental Revenue'], order=(1, 1, 1), seasonal_order=(0, 0, 0, 12))
        fitted_model = model.fit()
        
        # Forecast remaining months of the current year
        forecast = fitted_model.predict(start=current_month, end=11)
        
        # Append predictions with BU/COE and forecast
        for i, pred in enumerate(forecast):
            month = current_month + i
            year = current_year
            predictions.append({'Close Month': pd.to_datetime(f"{year}-{month}-01", format='%Y-%m-%d'), 'BU/COE': group, 'Total Incremental Revenue': pred})
    except:
        print(f"Unable to fit ARIMA model for {group}")

# Create DataFrame from predictions
predictions_df = pd.DataFrame(predictions)

# Merge predictions with original data
merged_data = pd.merge(df, predictions_df, on=['Close Month', 'BU/COE'], how='left')

# Output merged_data with additional 'Prediction' column
merged_data

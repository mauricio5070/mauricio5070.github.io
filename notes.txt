import pandas as pd
from statsmodels.tsa.arima.model import ARIMA
from pmdarima import auto_arima
import matplotlib.pyplot as plt

# Load your dataset
# Assuming your dataset is stored in a DataFrame called df
# with columns 'Close Month', 'Close Year', 'BU/COE', and 'Total Incremental Revenue'

# Combine 'Close Month' and 'Close Year' columns into a single date column
df['date'] = pd.to_datetime(df['Close Year'].astype(str) + '-' + df['Close Month'].astype(str))

# Aggregate the data if needed
# For ARIMA, we'll just use the original data

# Split the data into train and test sets
train_size = int(len(df) * 0.8)
train, test = df[:train_size], df[train_size:]

# Fit AutoARIMA model
autoarima_model = auto_arima(train['Total Incremental Revenue'], seasonal=True, m=12)

# Train the ARIMA model
model = ARIMA(train['Total Incremental Revenue'], order=autoarima_model.order, seasonal_order=autoarima_model.seasonal_order)
model_fit = model.fit()

# Make predictions
predictions = model_fit.forecast(steps=len(test))

# Visualize the predictions
plt.plot(test['date'], test['Total Incremental Revenue'], label='Actual')
plt.plot(test['date'], predictions, label='Predicted')
plt.xlabel('Date')
plt.ylabel('Total Incremental Revenue')
plt.title('ARIMA Forecast')
plt.legend()
plt.show()
